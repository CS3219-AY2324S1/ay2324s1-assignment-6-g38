version: '3.8'

services:
  question-service:
    restart: on-failure
    build:
      context: ./services/question-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/question-service:/app
    depends_on:
      - mongodb
    environment:
      - DATABASE_URL=mongodb://mongodb-user:mongodb-pass@mongodb:27017/question-db?authSource=admin
      - PORT=5001
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - '5001:5001'
      
  mongodb:
    restart: always
    build: ./services/question-service/mongodb-rs
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb-user
      MONGO_INITDB_ROOT_PASSWORD: mongodb-pass
      MONGO_INITDB_DATABASE: question-db
      MONGO_REPLICA_HOST: mongodb
      MONGO_REPLICA_PORT: '27017'
    volumes:
      - mongodb_master_data:/data/db
    ports:
      - '27017:27017'

  user-service:
    restart: on-failure
    build: 
      context: ./services/user-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/user-service:/app
    depends_on:
      - user-db
    environment:
      - DATABASE_URL=postgres://postgres:postgres@user-db:5432/user-service?schema=public
      - SERVER_PORT=2001
    ports:
      - '2001:2001'
  
  user-db:
    restart: always
    image: postgres:14.1-alpine
    volumes:
      - user-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=user-service
    ports:
      - '6542:5432'
  
  test-user-db:
    restart: always
    image: postgres:14.1-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=test-user-service
    ports:
      - '6543:5432'
  
  collab-service:
    restart: on-failure
    build:
      context: ./services/collab-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/collab-service:/app
    ports:
      - '4001:4001'

volumes:
  mongodb_master_data:
    driver: local
  user-db-data:
    driver: local
